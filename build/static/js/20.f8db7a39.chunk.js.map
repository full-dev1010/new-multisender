{"version":3,"sources":["app/launchpad/Verification.js","app/launchpad/components/WarningComponent.js","app/launchpad/tokenAPI/utils/validatorMultisender.js"],"names":["recipientsList","address","amount","styleModal","position","top","left","transform","width","borderRadius","boxShadow","Verification","useState","setWallet","setStatus","tokenAvailable","setTokenAvailable","tokenAddress","setTokenAddress","setTokenName","setTokenSymbol","setTokenDecimal","setTokenTotalSupply","setTransactionList","transactionsInfo","setTransactionsInfo","setAddressList","addressInfo","setAddressInfo","setAmountList","tokenBalance","isAccountWarning","setIsAccountWarning","isTransactionWarning","setIsTransactionWarning","showExampleStatus","setShowExampleStatus","React","mounted","setMounted","changeAddressInfo","value","changeType","orgArray","split","resAddressList","resAmountList","i","length","trim","info","undefined","validateAddress","validateAmount","push","parseFloat","changeTransactionsInfo","resTxList","validateTransaction","addWalletListener","window","ethereum","on","accounts","target","href","useEffect","bsCustomFileInput","init","a","getCurrentWalletConnected","status","asyncFetchTokenData","open","setOpen","handleOpen","uploadHandler","e","preventDefault","className","Group","htmlFor","Control","type","id","placeholder","name","onChange","authOptions","method","url","data","crossDomain","dataType","axios","then","response","console","log","symbol","decimals","ok","supply","catch","error","getTokenInfoAction","onClick","height","setOptions","fontSize","lineHeight","val","handleFiles","files","reader","FileReader","onload","orgContent","result","readAsText","fileTypes","warningText","alert","nextValidation1","onClose","aria-labelledby","aria-describedby","sx","styles","fadeIn","animation","animationName","Radium","keyframes","WarningCompolent","style","WAValidator","require","rx_live","tokenSymbol","validate","test","validateInvestorsList","content","investorsArray","count","item","arr"],"mappings":"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","file":"static/js/20.f8db7a39.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport ReactFileReader from \"react-file-reader\";\nimport AceEditor from 'react-ace';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport WarningComponent from './components/WarningComponent';\n\nimport {\n  getCurrentWalletConnected,\n  updateTokenName,\n} from \"./tokenAPI/utils/interact.js\";\n\nimport{ \n  validateAddress,\n  validateAmount,\n  validateTransaction\n} from './tokenAPI/utils/validatorMultisender.js';\n\nimport axios from \"axios\";\n\nvar recipientsList = [\n  {\n    address: '0x7D52422D3A5fE9bC92D3aE8167097eE09F1b347d',\n    amount: 1.5\n  },{\n    address: '0x64c9525A3c3a65Ea88b06f184F074C2499578A7E',\n    amount: 1\n  }\n];\n\nconst styleModal = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 600,\n  borderRadius: '5px',\n  boxShadow: 24,\n};\n\nconst exampleTxInfo = `0x63d4610ab717854858bcb07b7aface2cfb3bb4332f7dfd3bcdaf96957442b9a4\\n0xe0718bf44b70df05332015920140f3bb90cd0f2ce24be5a8d175354ef7e201fa`\nconst exampleAddressInfo = `0xA3361322364CC901d73050D5Dee388f962B9f897,1000\\n0x38d8EaC80539223e2b3c3040347a0DbBbF7E86Ab,10.2`\n\nconst Verification = () => {\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [message, setMessage] = useState(\"No connection to the network.\"); //default message\n\n  // 0xff90962f83810f1d4fbf4ba970a6b443b41267a5\n\n  const [tokenAvailable, setTokenAvailable] = useState(false);\n  const [tokenAddress, setTokenAddress] = useState('');\n  const [tokenName, setTokenName] = useState('');\n  const [tokenSymbol, setTokenSymbol] = useState('');\n  const [tokenDecimal, setTokenDecimal] = useState();\n  const [tokenTotalSupply, setTokenTotalSupply] = useState(1000000000);\n\n  const [transactionList, setTransactionList] = useState([])\n  const [transactionsInfo, setTransactionsInfo] = useState(\"\")\n  const [addressList, setAddressList] = useState([])\n  const [addressInfo, setAddressInfo] = useState('');\n  const [amountList, setAmountList] = useState([])\n  const [tokenBalance, setTokenBalance] = useState(10000)\n  const [isApproval, setIsApproval] = useState(false)\n  const [isAccountWarning, setIsAccountWarning] = useState(false);\n  const [isTransactionWarning, setIsTransactionWarning] = useState(false);\n  const [showExampleStatus, setShowExampleStatus] = useState('txInfo');\n\n  const [mounted, setMounted] = React.useState(false)\n\n    const onChangeAddressInfo = value => {\n      changeAddressInfo(value, 'key');\n    }\n\n    const onChangeTransactionsInfo = value => {\n      changeTransactionsInfo(value, 'key')\n    }\n\n    const changeAddressInfo = (value, changeType) => {\n      if(changeType != 'file' ) setAddressInfo(value)\n      const orgArray = value.split(/\\r\\n|\\n|\\r/);\n      let tokenAmount = 0;\n      let content = '';\n      let resAddressList = [];\n      let resAmountList = [];\n      recipientsList = [];\n      for(let i = 0; i < orgArray.length; i++){\n        if(orgArray[i].trim() == '') continue;\n        const info = orgArray[i].split(',');\n        if( info == undefined || info.length < 2 ){\n          setIsAccountWarning(true);\n          continue;\n        }\n        const address = info[0].trim();\n        const amount = info[1].trim();\n        if( !validateAddress(address, 'ETH') || !validateAmount(amount) ){\n          setIsAccountWarning(true);\n          continue;\n        }\n        if( resAddressList.length > 0 ){\n          content += '\\n';\n        }\n        content += address + ',' + amount;\n        resAddressList.push(address);\n        resAmountList.push(parseFloat(amount));  \n        recipientsList.push(\n          {\n            address: address,\n            amount: parseFloat(amount)\n          }\n        );\n        tokenAmount += parseFloat(amount);\n      }\n      setAddressList(resAddressList);\n      setAmountList(resAmountList);\n      if(changeType == 'file' ) setAddressInfo(value)\n    }\n\n    const changeTransactionsInfo = (value, changeType) => {\n      if( changeType != 'file' )setTransactionsInfo(value)\n      const orgArray = value.split(/\\r\\n|\\n|\\r/);\n      let content = '';\n      let resTxList = [];\n      for(let i = 0; i < orgArray.length; i++){\n        if(orgArray[i].trim() == '') continue;\n        const address = orgArray[i].trim();\n        if( !validateTransaction(address) ){\n          setIsTransactionWarning(true);\n          continue;\n        }\n        if( resTxList.length > 0 ){\n          content += '\\n';\n        }\n        content += address;\n        resTxList.push(address);\n      }\n      setTransactionList(resTxList);\n      if( changeType == 'file' )setTransactionsInfo(value)\n    }\n\n    const getTokenInfoAction = (e) => {\n      setTokenAddress(e.target.value);\n      var authOptions = {\n        method: 'POST',\n        url: '/api/v1/getToken',\n        data: {\n          \"contractaddress\": e.target.value.trim(),\n          // \"contractaddress\": \"0xff90962f83810f1d4fbf4ba970a6b443b41267a5\",\n          \"apikey\" : \"ifxygq7umocwcw4cc0gok04sskwskow4w040c04gs8g4448og0wogowko0w8csog\"\n        },\n        crossDomain: true,\n        dataType: 'json'\n      };\n\n      axios(authOptions)\n      .then((response) => {\n          console.log(response.data)\n          setTokenName(response.data.name);\n          setTokenSymbol(response.data.symbol);\n          setTokenDecimal(response.data.decimals);\n          setTokenAvailable(response.data.ok);\n          setTokenTotalSupply(response.data.supply)\n      })\n      .catch((error) => {\n          console.log(error)\n      })\n    }\n\n    //called only once\n    useEffect(() => {\n      bsCustomFileInput.init()\n      setMounted(true)\n\n      const asyncFetchTokenData = async () => {\n\n        const { address, status } = await getCurrentWalletConnected();\n    \n        setWallet(address);\n        setStatus(status);\n    \n        addWalletListener();\n        \n      }\n      asyncFetchTokenData();\n    });\n  \n    function addWalletListener() {\n      if (window.ethereum) {\n        window.ethereum.on(\"accountsChanged\", (accounts) => {\n          if (accounts.length > 0) {\n            setWallet(accounts[0]);\n            setStatus(\"👆🏽 Write a message in the text-field above.\");\n          } else {\n            setWallet(\"\");\n            setStatus(\"🦊 Connect to Metamask using the top right button.\");\n          }\n        });\n      } else {\n        setStatus(\n          <p>\n            {\" \"}\n            🦊{\" \"}\n            <a target=\"_blank\" href={`https://metamask.io/download.html`}>\n              You must install Metamask, a virtual Ethereum wallet, in your\n              browser.\n            </a>\n          </p>\n        );\n      }\n    }\n\n    const nextValidation1 = (e) => {\n      e.preventDefault();\n      if( tokenAvailable != true ){\n        alert(\"Your Token address # is an invalid Address!\");\n        return;\n      }\n    };\n\n    const [open, setOpen] = useState(false);\n    const handleOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = () => {\n      setOpen(false);\n    };\n    const handleOpenTransactions = () => {\n      setShowExampleStatus('txInfo');\n      handleOpen();\n    }\n\n    const handleOpenAddress = () => {\n      setShowExampleStatus('addressInfo');\n      handleOpen();\n    }\n\n    const uploadHandler = (e) => {\n      e.preventDefault();\n\n    }\n\n    const handleAddressFiles = files => {\n      var reader = new FileReader();\n      reader.onload = function(e) {\n          // Use reader.result\n        const orgContent = reader.result;\n        changeAddressInfo(orgContent, 'file');\n      }\n      reader.readAsText(files[0]);\n    } \n\n    const handleTxFiles = files => {\n      var reader = new FileReader();\n      reader.onload = function(e) {\n          // Use reader.result\n        const orgContent = reader.result;\n        changeTransactionsInfo(orgContent, 'file');\n      }\n      reader.readAsText(files[0]);\n    } \n\n    if (!mounted) return null;\n\n  \n    return (\n      <div className=\"div-verification\">\n        {/* <div className=\"page-header\">\n        </div> */}\n        <div className=\"row-header\">\n            <div className=\"verification-title\">Batch Verification</div>\n            <div className=\"verification-description\">If you have a list of recipients and a list of transactions from your previous multi-send, you can check which recipients received their tokens.\n            </div>\n        </div>\n\n        <div className=\"row token-address-container\">\n          <div className=\"grid-margin stretch-card col-step-card\">\n            <div className=\"card step-card\">\n              <div className=\"card-body\">\n                    <form className=\"forms-sample form-transaction\">\n                      <Form.Group>\n                        <label htmlFor=\"inputTokenAddress\">Token Address</label>\n                        { tokenBalance > 0 && \n                          <span className=\"text-balance\">Balance: {tokenBalance}</span>\n                        }\n                        <Form.Control type=\"text\" id=\"inputTokenAddress\" placeholder=\"0x\"\n                          name=\"tokenAddress\"\n                          value={tokenAddress} \n                          onChange={ (e) => getTokenInfoAction(e) } />\n                          {/* // onChange={(e) => setTokenAddress(e.target.value)} /> */}\n                        <label className=\"lable-table\" htmlFor=\"inputRecipients\">Yours TX's hashes\n                          <span className=\"btn-show-example-csv\" onClick={handleOpenTransactions}>Show Example CSV</span>\n                        </label>\n                        <div className=\"div-ace-editor\">\n                          <AceEditor\n                            placeholder={`0x63d4610ab717854858bcb07b7aface2cfb3bb4332f7dfd3bcdaf96957442b9a4\\n0xe0718bf44b70df05332015920140f3bb90cd0f2ce24be5a8d175354ef7e201fa`}\n                            width=\"100%\"\n                            height=\"300px\"\n                            setOptions={{ \n                              fontSize: \"18px\",\n                              lineHeight: \"28px\"\n                            }}\n                            value={transactionsInfo}\n                            onChange={val => onChangeTransactionsInfo(val)}\n                          />\n                        </div>\n                      </Form.Group>\n\n                      <ReactFileReader handleFiles={handleTxFiles} fileTypes={'.csv'} \n                        className=\"btn btn-danger btn-icon-text btn-upload\"\n                        onClick={uploadHandler}                      \n                      >\n                        <i className=\"mdi mdi-upload btn-icon-prepend\"></i>                                                    \n                        Upload CSV File                    \n                      </ReactFileReader>\n                      {\n                        isTransactionWarning && \n                        <WarningComponent \n                          warningText={'Invalid Transaction Addresses!'}\n                        />\n                      }\n                    </form>\n\n                    <form className=\"forms-sample form-address\">\n                      <Form.Group>\n                        <label className=\"lable-table\" htmlFor=\"inputRecipients\">Original list of recipients\n                          <span className=\"btn-show-example-csv\" onClick={handleOpenAddress}>Show Example CSV</span>\n                        </label>\n                        <div className=\"div-ace-editor\">\n                          <AceEditor\n                            placeholder={`0xA3361322364CC901d73050D5Dee388f962B9f897,1000\\n0x38d8EaC80539223e2b3c3040347a0DbBbF7E86Ab,10.2`}\n                            width=\"100%\"\n                            height=\"300px\"\n                            setOptions={{ \n                              fontSize: \"18px\",\n                              lineHeight: \"28px\"\n                            }}\n                            value={addressInfo}\n                            onChange={val => onChangeAddressInfo(val)}\n                          />\n                        </div>\n                      </Form.Group>\n\n                      <ReactFileReader handleFiles={handleAddressFiles} fileTypes={'.csv'} \n                        className=\"btn btn-danger btn-icon-text btn-upload\"\n                        onClick={uploadHandler}                      \n                      >\n                        <i className=\"mdi mdi-upload btn-icon-prepend\"></i>                                                    \n                        Upload CSV File                    \n                      </ReactFileReader>\n                      <button className=\"btn btn-next mr-2 btn-check\"\n                        onClick={(e) => nextValidation1(e)}\n                      >Check</button>\n                      {\n                        isAccountWarning && \n                        <WarningComponent \n                          warningText={'Invalid Account Information!'}\n                        />\n                      }\n                    </form>\n\n              </div>\n            </div>\n          </div>\n        </div>\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"parent-modal-title\"\n          aria-describedby=\"parent-modal-description\"\n        >\n          <Box sx={{ ...styleModal, width: showExampleStatus == 'txInfo' ? 670 : 500 }}>\n            <div className=\"div-ace-editor\">\n                <AceEditor\n                  width=\"100%\"\n                  height=\"300px\"\n                  setOptions={{ \n                    fontSize: \"18px\",\n                    lineHeight: \"28px\"\n                  }}\n                  value={ showExampleStatus == 'txInfo' ? exampleTxInfo : exampleAddressInfo}\n                />\n              </div>\n          </Box>\n        </Modal>\n\n      </div>\n\n    );\n  };\n  \nexport default Verification;\n\n","import React, { Component } from 'react'\n\nimport { bounce, fadeIn } from 'react-animations';\nimport Radium, {StyleRoot} from 'radium';\n\nconst styles = {\n    fadeIn: {\n      animation: 'x 1s',\n      animationName: Radium.keyframes(fadeIn, 'fadeIn')\n    }\n  }\n\nconst WarningCompolent = ({warningText}) => {\n    return (\n        <StyleRoot>\n            <div className=\"div-warning\" style={styles.fadeIn}>\n                {warningText}\n            </div>\n        </StyleRoot>\n    )\n}\n\nexport default WarningCompolent;\n","var WAValidator = require('wallet-address-validator');\nconst rx_live = /^[+-]?\\d*(?:[.,]\\d*)?$/;\n\nexport const validateAddress = (address, tokenSymbol) => {\n    return WAValidator.validate(address, tokenSymbol);\n}\n\nexport const validateTransaction = (address) => {\n    return address.length == 66;\n}\n\nexport const validateAmount = amount => {\n    return rx_live.test(amount);\n}\n\nexport const validateInvestorsList = content => {\n    const investorsArray = content.split(/\\r\\n|\\n|\\r/);\n    let count = 0;\n    for(let i = 0; i < investorsArray.length; i++){\n        const item = investorsArray[i].trim();\n        if( item == '' ) continue;\n        const arr = item.split(',');\n        if( arr == undefined || arr.length < 2 ) return false;\n        const address = arr[0].trim();\n        const amount = arr[1].trim();\n        if( address == '' || amount == ''\n            || !validateAddress(address, 'ETH') || !validateAmount(amount) ) return false;\n        count++;\n    }\n    return count < 2 ? false : true;\n}\n\n"],"sourceRoot":""}