{"version":3,"sources":["assets/new_images/images/crown.png","app/launchpad/Vip.js"],"names":["module","exports","setNetworkType","networkActions","Vip","useState","walletAddress","setWallet","setStatus","mainCoinName","React","mounted","setMounted","typeTier","setTypeTier","fee","handleChangeCheckbox","e","target","value","console","log","dispatch","useDispatch","useEffect","chainId","getNetworkChainId","networkIndex","getNetworkListIndex","updateNetwork","bsCustomFileInput","init","a","getCurrentWalletConnected","address","status","addWalletListener","asyncFetchTokenData","networkType","useSelector","state","Network","window","ethereum","on","accounts","length","href","className","id","src","crown","Group","type","name","onChange","defaultChecked","onClick","alert","buyVip","parseInt"],"mappings":"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","file":"static/js/22.ea3970f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crown.c68f6ed5.png\";","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport moment from 'moment';\n\nimport crown from '../../assets/new_images/images/crown.png'\n\nimport AceEditor from 'react-ace';\n\nimport { useEffect, useState } from \"react\";\nimport {\n  connectWallet,\n  getCurrentWalletConnected,\n  createTokenInfo,\n  updateTokenName,\n  buyVip,\n  getNetworkChainId,\n  getNetworkListIndex,\n} from \"./tokenAPI/utils/interact.js\";\n\nimport networkActions from './redux/network/actions';\nconst { setNetworkType } = networkActions;\n\nconst Vip = () => {\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [mainCoinName, setMainCoinName] = useState(\"BNB\");\n\n  const [mounted, setMounted] = React.useState(false)\n  const [networkId, setNetworkId] = useState(-1);\n\n  const [typeTier, setTypeTier] = useState(\"3\");\n  const fee = [0.1, 0.3, 0.5, 1];\n  \n  const handleChangeCheckbox = (e) => {\n    // let isChecked = e.target.checked;\n    setTypeTier(e.target.value)\n    console.log(\"CGI\", typeTier);\n  }\n  const dispatch = useDispatch();\n  const updateNetwork = (networkIndex) => {\n      dispatch(setNetworkType(networkIndex));\n  }\n\n  const handleClickBuyVip = () => {\n    alert(networkType);\n    buyVip(networkType, walletAddress, typeTier, fee[parseInt(typeTier)]);\n  }\n\n    //called only once\n    useEffect(() => {\n      const chainId = getNetworkChainId();\n      const networkIndex = getNetworkListIndex(chainId);\n      updateNetwork(networkIndex);\n      console.log(\"network Index is \", networkIndex);\n\n      bsCustomFileInput.init()\n      setMounted(true)\n\n      const asyncFetchTokenData = async () => {\n\n        const { address, status } = await getCurrentWalletConnected();\n    \n        setWallet(address);\n        setStatus(status);\n    \n        addWalletListener();\n        \n      }\n      asyncFetchTokenData();\n    }, []);\n\n    const {\n      networkType\n    } = useSelector((state) => state.Network);\n    \n    function addWalletListener() {\n      if (window.ethereum) {\n        window.ethereum.on(\"accountsChanged\", (accounts) => {\n          if (accounts.length > 0) {\n            setWallet(accounts[0]);\n            setStatus(\"üëÜüèΩ Write a message in the text-field above.\");\n          } else {\n            setWallet(\"\");\n            setStatus(\"ü¶ä Connect to Metamask using the top right button.\");\n          }\n        });\n      } else {\n        setStatus(\n          <p>\n            {\" \"}\n            ü¶ä{\" \"}\n            <a target=\"_blank\" href={`https://metamask.io/download.html`}>\n              You must install Metamask, a virtual Ethereum wallet, in your\n              browser.\n            </a>\n          </p>\n        );\n      }\n    }\n    \n    if (!mounted) return null;\n\n\n    return (\n      <div className=\"div-vip\">\n        <div className=\"row-header\">\n          <div className=\"grid-margin stretch-card\">\n            <img id=\"img-tax-free\" src={crown}></img>\n          </div>\n          <div className=\"div-vip-description\">\n            <p>VIP gives you discounted access to Multisender.app and all of your tx will be free.</p>\n            <p>Keep in mind, you would still need to pay for {mainCoinName} network fees.</p>\n            <p>If you need additional information, feel free to ask in our Telegram channel. <a href=\"https://t.me/MultiSender\" target=\"_blank\">t.me/MultiSender</a></p>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"grid-margin stretch-card col-step-card\">\n            <Form.Group>\n                <div className=\"form-check\">\n                    <label className=\"form-check-label\">\n                        <input type=\"radio\" className=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios1\" value=\"0\" onChange={e => handleChangeCheckbox(e)}/>\n                        <i className=\"input-helper\"></i>1 day\n                        <span className=\"text-fee-value\">{fee[0]} {mainCoinName}</span>\n                    </label>\n                </div>\n                <div className=\"form-check\">\n                    <label className=\"form-check-label\">\n                        <input type=\"radio\" className=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios2\" value=\"1\" onChange={e => handleChangeCheckbox(e)}/>\n                        <i className=\"input-helper\"></i>\n                        7 days\n                        <span className=\"text-fee-value\">{fee[1]} {mainCoinName}</span>\n                    </label>\n                </div>\n                <div className=\"form-check\">\n                    <label className=\"form-check-label\">\n                        <input type=\"radio\" className=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios3\" value=\"2\" onChange={e => handleChangeCheckbox(e)}/>\n                        <i className=\"input-helper\"></i>\n                        1 month\n                        <span className=\"text-fee-value\">{fee[2]} {mainCoinName}</span>\n                    </label>\n                </div>\n                <div className=\"form-check\">\n                    <label className=\"form-check-label\">\n                        <input type=\"radio\" className=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios4\" value=\"3\" defaultChecked onChange={e => handleChangeCheckbox(e)}/>\n                        <i className=\"input-helper\"></i>\n                          no limit\n                        <span className=\"text-fee-value\">{fee[3]} {mainCoinName}</span>\n                    </label>\n                </div>\n            </Form.Group>\n          </div>\n          <button type=\"button\" className=\"btn btn-icon-text btn-buy\"\n            onClick={handleClickBuyVip}>\n            Buy\n          </button>\n\n        </div>\n\n      </div>\n\n    );\n  };\n  \nexport default Vip;\n\n"],"sourceRoot":""}